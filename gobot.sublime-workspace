{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"QR",
				"QRDecoder"
			],
			[
				"Po",
				"Position"
			],
			[
				"thu",
				"thumbnailImageStore"
			],
			[
				"compo",
				"composingPost"
			],
			[
				"getF",
				"getUploadedFilePath"
			],
			[
				"form",
				"formData"
			],
			[
				"GPS",
				"GPSLatitude"
			],
			[
				"du",
				"duckLastName"
			],
			[
				"Duck",
				"DuckFirstNames"
			],
			[
				"Collec",
				"Collections"
			],
			[
				"getB",
				"getBase64DataSync"
			],
			[
				"image",
				"imageFile"
			],
			[
				"border",
				"border-style"
			],
			[
				"bo",
				"border-width"
			],
			[
				"background",
				"background-color"
			],
			[
				"text",
				"text-align"
			],
			[
				"Col",
				"Collections"
			],
			[
				"high",
				"highest_bid_amount"
			],
			[
				"aud",
				"audioData"
			],
			[
				"model",
				"modeldir"
			],
			[
				"re",
				"request"
			],
			[
				"con",
				"conversations"
			],
			[
				"conv",
				"conversations"
			],
			[
				"resu",
				"results"
			],
			[
				"pr",
				"phrase"
			],
			[
				"st",
				"startRecognition"
			],
			[
				"_",
				"_conversations"
			],
			[
				"conve",
				"conversation"
			],
			[
				"send",
				"send_from_directory"
			],
			[
				"query",
				"queryResultsId"
			],
			[
				"key",
				"keyPhrases"
			],
			[
				"phr",
				"phrase"
			],
			[
				"k",
				"keyPhrases"
			],
			[
				"keyPhra",
				"keyPhraseIndex"
			],
			[
				"hea",
				"heappush"
			],
			[
				"cac",
				"cacheVersion"
			],
			[
				"clas",
				"className"
			],
			[
				"getE",
				"getESType"
			],
			[
				"new",
				"newEntry"
			],
			[
				"al",
				"all_results"
			],
			[
				"class",
				"className"
			],
			[
				"cl",
				"className"
			],
			[
				"getFrom",
				"getFromCache"
			],
			[
				"C",
				"CachedESObject"
			],
			[
				"res",
				"resultId"
			],
			[
				"Object",
				"ObjectDoesNotExist"
			],
			[
				"result",
				"resultObject"
			],
			[
				"exce",
				"exception"
			],
			[
				"rela",
				"relatedTopic"
			],
			[
				"Query",
				"QueryResultsFactory"
			],
			[
				"quer",
				"queryResultsId"
			],
			[
				"get",
				"getQueryResultsClassName"
			],
			[
				"Ca",
				"CachedESObject"
			],
			[
				"qu",
				"queries"
			],
			[
				"convers",
				"conversation"
			],
			[
				"sear",
				"searchTerm"
			],
			[
				"conver",
				"conversationId"
			],
			[
				"se",
				"searchTerm"
			],
			[
				"sea",
				"searchFields"
			],
			[
				"sni",
				"snippetText"
			],
			[
				"p",
				"phrase"
			],
			[
				"ne",
				"newPhrases"
			],
			[
				"cnv",
				"cnvId"
			],
			[
				"upda",
				"updateConversation"
			],
			[
				"ens",
				"ensureCacheExists"
			],
			[
				"RE",
				"REDIS_KEY_EXPIRY"
			],
			[
				"red",
				"redisKey"
			],
			[
				"tok",
				"tokenizeText"
			],
			[
				"redis",
				"redisCache"
			],
			[
				"ob",
				"obj"
			],
			[
				"reds",
				"redisConn"
			],
			[
				"__get",
				"__getRedisKey"
			],
			[
				"object",
				"objectId"
			],
			[
				"oj",
				"objectId"
			],
			[
				"en",
				"ensureCacheExists"
			],
			[
				"han",
				"handleResult"
			],
			[
				"deg",
				"keyPhraseDegrade"
			],
			[
				"keyphras",
				"keyphraseList"
			],
			[
				"http",
				"http_client"
			],
			[
				"Objec",
				"ObjectDoesNotExist"
			],
			[
				"Con",
				"ConversationDoesNotExist"
			],
			[
				"excep",
				"exceptions"
			],
			[
				"uuid",
				"uuid4"
			],
			[
				"objec",
				"objectId"
			],
			[
				"es",
				"es_type"
			],
			[
				"ES_",
				"ES_INDEX_NAME"
			],
			[
				"ES",
				"ES_CONVERSATION_NAME"
			],
			[
				"Conver",
				"Conversation"
			],
			[
				"Conv",
				"ConversationNotFound"
			],
			[
				"resuls",
				"results_to_delete"
			],
			[
				"tex",
				"textResult"
			],
			[
				"htt",
				"http_client"
			],
			[
				"exc",
				"exception"
			],
			[
				"sourc",
				"SourceManager"
			],
			[
				"c",
				"confidence"
			],
			[
				"par",
				"parsed_args"
			],
			[
				"Source",
				"SourceManager"
			],
			[
				"fil",
				"fileName"
			],
			[
				"base",
				"BaseHandler"
			],
			[
				"fun",
				"func_wrapper"
			],
			[
				"Conve",
				"ConversationDoesNotExist"
			],
			[
				"time",
				"timestamp"
			],
			[
				"requ",
				"RequestHandler"
			],
			[
				"env",
				"environ"
			],
			[
				"tran",
				"transcription"
			],
			[
				"start",
				"startRecognizer"
			],
			[
				"getPr",
				"getPriceStr"
			],
			[
				"price",
				"priceStr"
			],
			[
				"getPri",
				"getPrice"
			],
			[
				"getPrice",
				"getPriceStr"
			],
			[
				"getShip",
				"getShippingPrice"
			],
			[
				"ship",
				"shipping"
			],
			[
				"cou",
				"country"
			],
			[
				"shipp",
				"shippingPriceStr"
			],
			[
				"us",
				"userAddress"
			],
			[
				"getShipp",
				"getShippingPriceStr"
			],
			[
				"getShi",
				"getShippingPriceStr"
			],
			[
				"in",
				"insurance"
			],
			[
				"is",
				"isInternational"
			],
			[
				"with",
				"withInsurance"
			],
			[
				"make",
				"makePriceStr"
			],
			[
				"alp",
				"alphabet_orig"
			],
			[
				"pos",
				"pos_tuple"
			],
			[
				"kml",
				"kmlNamespacesMap"
			],
			[
				"sub",
				"subscribers"
			],
			[
				"Databas",
				"DatabaseTable"
			],
			[
				"shi",
				"shipping_price"
			],
			[
				"sess",
				"session_id"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 107.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"format",
				"Format: Javascript"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"i",
				"Indentation: Reindent Lines"
			],
			[
				"ind",
				"Indentation: Reindent Lines"
			],
			[
				"inde",
				"Indentation: Reindent Lines"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"jso",
				"Indent JSON"
			],
			[
				"json",
				"Indent JSON"
			],
			[
				"js",
				"Indent JSON"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"pa",
				"Package Control: Install Package"
			],
			[
				"in",
				"Indent XML"
			],
			[
				"F#",
				"Set Syntax: F#"
			]
		],
		"width": 476.0
	},
	"console":
	{
		"height": 125.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/jeremy/projects/gobot"
	],
	"file_history":
	[
		"/Users/jeremy/projects/odakim/classes/PageContent.php",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-filesystem/.npm/package/node_modules/zxing/package.json",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-filesystem/.npm/package/node_modules/zxing/lib/qrcode.js",
		"/Users/jeremy/projects/oneduckadventure/bower.json",
		"/Users/jeremy/projects/oneduckadventure/.bowerrc",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-filesystem/bower.json",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-filesystem/.npm/package/node_modules/qrcode-reader/index.js",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-data/package.js",
		"/Users/jeremy/projects/oneduckadventure/client/stylesheets/sites/home.import.less",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-layout/views/header.html",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-layout/views/uc.html",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-filesystem/lib/init.js",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-layout/views/layout.html",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-layout/views/posts.js",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-layout/views/posts.html",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-data/lib/collections/posts.js",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-data/lib/schemas/post.js",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-auth/lib/config.js",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-data/lib/collections/images.js",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-data/lib/schemas/image.js",
		"/Users/jeremy/projects/oneduckadventure/client/stylesheets/vendor/custom.bootstrap.json",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-layout/package.js",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-filesystem/package.js",
		"/Users/jeremy/projects/meteor-user-session/package.js",
		"/Users/jeremy/projects/meteor-user-session/README.md",
		"/Users/jeremy/projects/meteor-user-session/common.js",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-layout/views/layout.js",
		"/Users/jeremy/projects/oneduckadventure/.meteor/local/build/programs/server/packages/oda-filesystem.js",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-layout/views/app.html",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-layout/views/footer.html",
		"/Users/jeremy/projects/oneduckadventure/.meteor/local/build/programs/web.browser/packages/tomi_upload-jquery.js",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-data/lib/collections/ducks.js",
		"/Users/jeremy/projects/oneduckadventure/server/main.js",
		"/Users/jeremy/projects/oneduckadventure/settings.json",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-data/lib/schemas/duck.js",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-layout/views/header.js",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-data/lib/schemas/duckNames.js",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-data/lib/collections/duckNames.js",
		"/Users/jeremy/projects/oneduckadventure/packages/test/package.js",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-data-test/package.js",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-layout/views/user.html",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-layout/views/user.js",
		"/Users/jeremy/projects/oneduckadventure/client/stylesheets/blog.css",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-routes/package.js",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-routes/lib/routes/default.js",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-routes/lib/config.js",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-routes/lib/routes/profile.js",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-layout/views/profile.html",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-data/lib/collections/users.js",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-data/lib/collections.js",
		"/Users/jeremy/projects/oneduckadventure/.meteor/packages",
		"/Users/jeremy/projects/oneduckadventure/.meteor/local/build/programs/server/program.json",
		"/Users/jeremy/projects/oneduckadventure/.meteor/versions",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-exif/exif.js",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-exif/package.js",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-routes/lib/routes/uc.js",
		"/Users/jeremy/projects/oneduckadventure/.meteor/local/build/programs/server/packages/oda-routes.js",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-data/lib/config_server.js",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-auth/package.js",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-routes/lib/config_auth.js",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-routes/namespace.js",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-auth/namespace.js",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-data/lib/schemas/user.js",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-data/lib/schemas/location.js",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-data/lib/schemas.js",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-data/namespace.js",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-routes/lib/routes/root.js",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-layout/views/common_links.html",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-analytics/package.js",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-analytics/lib/config_settings.js",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-ganalytics/settings.json",
		"/Users/jeremy/projects/oneduckadventure/app.html",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-data/schemas.js",
		"/Users/jeremy/projects/oneduckadventure/client/app.js",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-analytics/namespace.js",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-ganalytics/package.js",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-analytics/settings.json",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-analytics/lib/config.js",
		"/Users/jeremy/projects/oneduckadventure/packages/oda-data/collections.js",
		"/Users/jeremy/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/jeremy/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/jeremy/projects/oneduckadventure/common/schemas.js",
		"/Users/jeremy/projects/oneduckadventure/common/collections.js",
		"/Users/jeremy/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
		"/Users/jeremy/Library/Application Support/Sublime Text 3/Packages/Default/Default (OSX).sublime-keymap",
		"/Users/jeremy/projects/oneduckadventure/client/stylesheets/stylesheet.css",
		"/Users/jeremy/projects/oneduckadventure/oneduckadventure.html",
		"/Users/jeremy/projects/oneduckadventure/oneduckadventure.js",
		"/Users/jeremy/projects/oneduckadventure/client/stylesheets/style.css",
		"/Users/jeremy/projects/oneduckadventure/public/fonts/stylesheet.css",
		"/Users/jeremy/projects/oneduckadventure/index.html",
		"/Users/jeremy/projects/oneduckadventure/client/stylesheets/css/oneduckadventure.css",
		"/Users/jeremy/projects/oneduckadventure/assets/css/oneduckadventure.css",
		"/Users/jeremy/projects/odakim/classes/Auction.php",
		"/Users/jeremy/projects/odakim/auction.php",
		"/Users/jeremy/projects/odakim/classes/TableDisplay.php",
		"/Users/jeremy/projects/odakim/classes/Product.php",
		"/Users/jeremy/projects/odakim/.htaccess",
		"/Users/jeremy/projects/context/app/static/js/resample.js",
		"/Users/jeremy/projects/context/test.py",
		"/Users/jeremy/projects/context/app/util/threasafe_bytesio.py",
		"/Users/jeremy/projects/context/app/audio/audio_recognizer.py",
		"/Users/jeremy/projects/context/app/audio/__init__.py",
		"/Users/jeremy/projects/context/app/static/js/context.js",
		"/Users/jeremy/projects/context/app/static/index.html",
		"/Users/jeremy/projects/context/app/source/source.py",
		"/Users/jeremy/projects/context/app/conversation/conversation.py",
		"/Users/jeremy/projects/context/app/source/source_manager.py",
		"/Users/jeremy/projects/context/app/source/sources/wikipedia.py",
		"/Users/jeremy/projects/context/app/source/sources/duckduckgo.py",
		"/Users/jeremy/projects/context/vm/Vagrantfile",
		"/Users/jeremy/projects/pocketsphinx-python/sphinxbase/swig/sphinxbase_wrap.c",
		"/Users/jeremy/projects/pocketsphinx-python/example.py",
		"/Users/jeremy/projects/context/app/server.py",
		"/Users/jeremy/projects/context/app/results/result.py",
		"/Users/jeremy/projects/context/app/settings.py",
		"/Users/jeremy/projects/context/app/results/__init__.py",
		"/Users/jeremy/projects/context/app/__init__.py",
		"/Users/jeremy/projects/context/run.py",
		"/Users/jeremy/projects/context/app/util/__init__.py",
		"/Users/jeremy/projects/context/app/analyzer/text_analyzer.py",
		"/Users/jeremy/projects/context/app/analyzer/rake.py",
		"/Users/jeremy/projects/context/app/util/fixed_length_list.py",
		"/Users/jeremy/projects/context/app/source/__init__.py",
		"/Users/jeremy/projects/context/static/js/context.js",
		"/Users/jeremy/projects/context/static/index.html",
		"/Users/jeremy/projects/context/run.sh",
		"/Users/jeremy/projects/context/server.py"
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"/Users/jeremy/projects/oneduckadventure/packages",
			"",
			"/Users/jeremy/projects/oneduckadventure/packages/oda-layout/views",
			"<open folders>'",
			"",
			"-.meteor,<open folders>,",
			"-*.meteor,<open folders>,",
			"-*.meteor, <open folders>",
			"-*.meteor*, <open folders>",
			"-*\\.meteor*, <open folders>",
			"-*\\.meteor*",
			"-\\.meteor",
			"-\\.*",
			"",
			"/Users/jeremy/projects/pocketsphinx-python",
			"",
			"/Users/jeremy/projects/odakim/process",
			"~/projects/odakim/classes",
			"",
			"ts/*",
			"",
			"transaction_server/transaction_server/*.py",
			"transaction_server/*.py",
			"transaction_server/transaction_server/*.py",
			"transaction_server/*.py",
			"*.py",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"new Image",
			" Image",
			"Image",
			"getBase64Data",
			"newPost",
			"Session",
			"Uploader.localisation",
			"Drop Images to Post",
			"Drop Images To Post",
			"loginButtons",
			"Drop files here",
			"'users'",
			"users",
			"([A-Z]*).*",
			"post_image",
			"render(",
			"['\"]app['\"]",
			"app",
			"post.image.getFileRecord();\n\n      return post;\n    });",
			"nav-bar",
			"oda-exif",
			"handleBinaryFile(",
			"getImageData",
			"Loading uc",
			".row",
			"Tracker",
			"input",
			"content",
			".columns",
			"article",
			".columns",
			"article",
			"large-12",
			"large-9",
			"\";\n",
			"center",
			"();\n",
			"');\n",
			"*/\n",
			");\n",
			"true",
			"switch",
			"mouse",
			"(\\w+)",
			"function makePriceStr",
			"makePriceStr",
			"getPriceStr",
			"continuous",
			"Config_set_string",
			"app.",
			"log.",
			"request",
			"session",
			"top_frac",
			".",
			"Conversation",
			"keyPhrases'",
			"keyPhrases",
			"CACHE",
			"getES",
			"conn",
			"dump",
			"dumps",
			"\"",
			"Result",
			"Results",
			"localhost:8888/conversation/",
			"(\\d+:\\d+)",
			"(.+)\"\\{ \"snippet\": \"(.*)\" \\}\"",
			"(.+)'\\{ \"snippet\": \"(.*)\" \\}'",
			"localhost:8888",
			"(.+)",
			"'",
			"(.+)",
			"(.*)",
			"\"",
			"\\d+:\\d+",
			"processFromContent",
			")\n",
			"__getFromCacheWithKey",
			"logging",
			"def ensureCacheExists(func):\n    \"\"\"Ensure the cache exists before doing operations on it.\n    \"\"\"\n    def wrapper(cls, *args, **kwargs):\n        # if cls.__name__ not in _cache:\n        #     _cache[cls.__name__] = {}\n        cls.redis = redis.StrictRedis()\n        return func(cls, *args, **kwargs)\n    return wrapper\n\ndef ensureESConnection(func):\n    \"\"\"Get an ES connection for this object.\n    \"\"\"\n    def wrapper(cls, *args, **kwargs):\n        cls.getConnection()\n        return func(cls, *args, **kwargs)\n    return wrapper\n\nclass CachedESObject(ElasticSearchModel):\n    \"\"\"A generic cached object. Currently stored in local memory,\n    but this could be switched to Redis or memcache.\n    \"\"\"\n    @classmethod\n    @ensureESConnection\n    def getCached(cls, objectId=None, create=False):\n        \"\"\"Get an object from the cache.\n        \"\"\"\n        if objectId is None or objectId == '':\n            if create:\n                obj = cls()\n            else:\n                raise ObjectDoesNotExist('An id must be supplied.')\n        else:\n            obj = cls.__getFromCache(objectId)\n            if obj is None:\n                try:\n                    # Look for it in ES.\n                    obj = cls.esConn.get(ES_INDEX_NAME, cls.__name__, objectId)\n                    cls.__updateCache(obj)\n                except pyes.exceptions.NotFoundException:\n                    if create:\n                        obj = cls()\n                    else:\n                        raise ObjectDoesNotExist('%s with id %s does not exist.' % (cls.__name__, objectId))\n        return obj\n\n    @classmethod\n    @ensureCacheExists\n    def __getFromCache(cls, objectId):\n        \"\"\"Get an object from the cache.\n        \"\"\"\n        # if objectId in _cache[cls.__name__]:\n        #     return _cache[cls.__name__][objectId]\n        # else:\n        #     return None\n        log.warn(\"Getting %s from cache.\" % objectId)\n        cls.redis.get(cls.__getRedisKey(objectId))\n\n    @classmethod\n    @ensureCacheExists\n    def invalidate(cls, objectId):\n        \"\"\"Invalidate an object.\n        \"\"\"\n        # if objectId in _cache[cls.__name__]:\n        #     del _cache[cls.__name__][objectId]\n        cls.redis.delete(cls.__getRedisKey(objectId))\n\n    @classmethod\n    @ensureCacheExists\n    def __updateCache(cls, obj):\n        \"\"\"Ensure an object is referenced in the cache.\n        \"\"\"\n        # _cache[cls.__name__][obj.get_id()] = obj\n        cls.redis.set(cls.__getRedisKey(obj.get_id()), obj, REDIS_KEY_EXPIRY)\n\n    @classmethod\n    def __getRedisKey(cls, objectId):\n        \"\"\"Get the redis key for this object.\n        \"\"\"\n        return REDIS_KEY_FORMAT % (cls.__name__, objectId)\n\n    @classmethod\n    def getConnection(cls):\n        \"\"\"Make the ES connection.\n        \"\"\"\n        try:\n            cls.esConn\n        except:\n            cls.esConn = getESConnection(model=cls)\n        return cls.esConn\n\n    def __init__(self, *args, **kwargs):\n        super(CachedESObject, self).__init__(*args, **kwargs)\n        if 'connection' not in self._meta:\n            self._meta['connection'] = self.__class__.getConnection()\n        self._meta['type'] = self.__class__.__name__\n        self._meta['index'] = ES_INDEX_NAME\n        # self._meta['version'] = self.created = int(time())\n\n    def get_id(self):\n        \"\"\"Get a uuid4 for the id.\n        \"\"\"\n        _id = self._meta.get('id', None)\n        if _id is None:\n            _id = uuid.uuid4().hex\n            self._meta['id'] = _id\n        return _id\n\n    def sync(self):\n        \"\"\"Generate a version based on the timestamp and ensure the cache is updated.\n        \"\"\"\n        # self._meta['version'] = int(time())\n        self.__class__.__updateCache(self)\n        logging.info(self._meta.index)\n        logging.info(self._meta.type)\n        self.save()\n",
			"logging",
			"context_es",
			"invalidate",
			"ensureCacheDecorator",
			"True",
			"cls)",
			"cls, ",
			"cls(, |\\))",
			"#@classmethod\n",
			"#@classmethod\\n",
			"cls.",
			"getConversations",
			"getConversation",
			"getConversationContext",
			"insertConversationSnippet",
			"ConversationContext",
			"getAddressSelec",
			"getAddressSelecotr",
			"getCheckoutButton",
			"$_SESSION['shipping",
			"getCheckoutButton",
			"getAddressSelector",
			"getShippingPrice",
			"$insuranceOptional",
			"hiliteColor",
			"background",
			"background-color",
			"bg-color",
			"BgColor",
			"colorSelect",
			"bgcolor",
			"picker",
			"colorPicker",
			"buttonList",
			"htmlpurifier",
			"gx:Track",
			"delete",
			"_inline",
			"delete",
			"Auction",
			"print_r",
			"isAllValid",
			"TXN ID",
			"Addresses",
			"File",
			"makeCurrent"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"\"\\1\",",
			"\"\\1\",\\n",
			"'",
			"",
			"\\1\"\\{ \\\\\"snippet\\\\\": \\\\\"\\2\\\\\" \\}\"",
			"\\1\"\\{ \\\"snippet\\\": \\\"\\2\\\" \\}\"",
			"\\1\"\\{ \\\"snippet\\\": \\\"(.*)\\\" \\}\"",
			"localhost:8888/conversation/$CNVID",
			"curl -XPOST localhost:8888 -d '{ \"snippet\": \"\\1\" }'",
			"\\'",
			"curl -XPOST localhost:8888 -d '{ \"snippet\": \"\\1\" }'",
			"\\\"",
			"",
			")",
			"",
			"getAll",
			"get",
			"getContext",
			"insertSnippet",
			"Conversation",
			"roll",
			"pitch",
			"",
			"clean",
			"^^",
			"//\\1",
			"barometer",
			"",
			"request=None, transactionNum=-1",
			"db.commit(conn, curs)",
			"conn, curs = db.getCursor()",
			"\\1conn.commit()\n\\1db.closeDBConnection(conn)",
			"conn.commit()\ndb.closeDBConnection(conn)",
			"conn.commit()\\ndb.closeDBConnection()",
			"conn.commit()\\ndb.closeDBConnection(conn)",
			"_local",
			"ROLL",
			"roll",
			"yaw",
			"roll",
			"pitch",
			"yaw"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 173.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "gobot.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/projects/resume/resume.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 817.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 257.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
